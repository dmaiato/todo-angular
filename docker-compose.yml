services:
  webapi:
    build:
      context: ./backend/
      dockerfile: Dockerfile
    ports:
      - "5280:5280"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:5280
      - ConnectionStrings__DefaultConnection=Host=postgres;Database=webapidb;Username=postgres;Password=postgres
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - webapi-network
    restart: unless-stopped
  
  migrations:
    build:
      context: ./backend/
      dockerfile: Dockerfile
    environment:
      - ConnectionStrings__DefaultConnection=Host=postgres;Database=webapidb;Username=postgres;Password=postgres
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - webapi-network
    command: ["dotnet", "ef", "database", "update"]
    restart: "no"

  task-board:
    build:
      context: ./task-board
    environment:
      NODE_ENV: production
    ports:
      - 4200:4200

  postgres:
    image: postgres:17
    environment:
      POSTGRES_DB: webapidb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql # Optional: for initial schema
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - webapi-network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  webapi-network:
    driver: bridge
